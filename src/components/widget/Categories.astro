---
import I18nKey from "../../i18n/i18nKey";
import { i18n } from "../../i18n/translation";
import { getCategoryList } from "../../utils/content-utils";
import ButtonLink from "../control/ButtonLink.astro";
import WidgetLayout from "./WidgetLayout.astro";

// 获取分类列表
const categories = await getCategoryList();

// 折叠相关配置
const COLLAPSED_HEIGHT = "7.5rem";  // 折叠时的高度
const COLLAPSE_THRESHOLD = 5;       // 触发折叠的阈值（分类数量）

// 判断是否需要折叠
const isCollapsed = categories.length >= COLLAPSE_THRESHOLD;

// 接收父组件传递的属性
interface Props {
	class?: string;
	style?: string;
}
const className = Astro.props.class;
const style = Astro.props.style;
---

<WidgetLayout 
  name={i18n(I18nKey.categories)} 
  id="categories" 
  isCollapsed={isCollapsed} 
  collapsedHeight={COLLAPSED_HEIGHT}
  class={className} 
  style={style}
>
  <div class="categories-list transition-all duration-300 ease-in-out">
    {categories.map((c) => (
      <ButtonLink
        url={c.url}
        badge={String(c.count)}
        label={`View all posts in the ${c.name.trim()} category`}
        class="category-item hover:scale-[1.02] transition-transform duration-200"
      >
        {c.name.trim()}
      </ButtonLink>
    ))}
  </div>
</WidgetLayout>

<style>
  /* 添加平滑动画效果 */
  .categories-list {
    display: grid;
    gap: 0.5rem;
  }
  
  .category-item {
    transition: transform 0.2s ease-out, background-color 0.2s ease-out;
  }
  
  .category-item:hover {
    transform: translateX(4px);
  }
  
  /* 展开/折叠动画 */
  .widget-collapsible {
    overflow: hidden;
    transition: max-height 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);
  }
</style>

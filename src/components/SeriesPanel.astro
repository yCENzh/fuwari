---
import { UNCATEGORIZED } from '@constants/constants'
import I18nKey from '../i18n/i18nKey'
import { i18n } from '../i18n/translation'
import { getSortedPosts } from '../utils/content-utils'
import { getPostUrlBySlug } from '../utils/url-utils'
import { getCategoryUrl } from '../utils/url-utils'

interface Props {
  keyword?: string
  tags?: string[]
  categories?: string[]
}

let posts = await getSortedPosts()

interface Series {
  count: number
  name: string
  posts: typeof posts
}

const groups: { category: string; series: Series[] }[] = (() => {
  const groupedSeries = posts.reduce(
    (grouped: { [category: string]: {[seriesName: string]: Series} }, post) => {
      const category = post.data.category || UNCATEGORIZED
      const series = post.data.series || UNCATEGORIZED
      if (category == UNCATEGORIZED || series === UNCATEGORIZED) {
        return grouped
      }
      if (!grouped[category]) {
        grouped[category] = {}
      }
      if (!grouped[category][series]) {
        grouped[category][series] = {
          count: 0,
          name: series,
          posts: [],
        }
      }
      grouped[category][series].count++
      grouped[category][series].posts.push(post)
      return grouped
    },
    {},
  )

  // convert the object to an array
  const groupedSeriesArray = Object.keys(groupedSeries).map(key => ({
    category: key,
    series: Object.values(groupedSeries[key]),
  }))

  return groupedSeriesArray
})()
---

<div class="card-base px-6 py-6">
  {
    groups.map(group => (
      <div class="mb-8 last:mb-0">
        {/* 分类名称单独一行 */}
        <a 
          aria-label={group.category} 
          href={getCategoryUrl(group.category)}
          class="btn-plain scale-animation rounded-lg font-bold px-3 py-2 active:scale-95 inline-block mb-4 text-xl truncate max-w-full"
        >
          {group.category}
        </a>
        
        {/* 系列列表 */}
        <div class="relative">
          {/* 时间线主竖线 */}
          {group.series.length > 1 && (
            <div class="absolute left-[calc(20%+0.75rem)] w-0.5 top-0 bottom-0 bg-[var(--border-color)] -z-10"></div>
          )}
          
          {group.series.map((series, index) => (
            <a 
              href={getPostUrlBySlug(series.posts[series.posts.length-1].slug)}
              aria-label={series.name}
              class="group btn-plain !block w-full rounded-lg hover:text-[initial] mb-1 last:mb-0"
            >
              <div class="flex flex-row justify-start items-center h-10">
                {/* 文章数量（左） */}
                <div class="w-[20%] transition text-sm text-right text-50">
                  {series.count} {i18n(I18nKey.articles)}
                </div>
                
                {/* 时间线节点（中） */}
                <div class="w-[10%] flex justify-center">
                  <div class="transition-all w-3 h-3 rounded-full group-hover:h-5 group-hover:w-1
                  bg-[oklch(0.5_0.05_var(--hue))] group-hover:bg-[var(--primary)]
                  outline outline-4 z-50
                  outline-[var(--card-bg)]
                  group-hover:outline-[var(--btn-plain-bg-hover)]
                  group-active:outline-[var(--btn-plain-bg-active)]"
                  ></div>
                </div>
                
                {/* 系列名称（右） */}
                <div class="w-[70%] text-left font-bold
                  group-hover:translate-x-1 transition-all group-hover:text-[var(--primary)]
                  text-75 pr-8 whitespace-nowrap overflow-ellipsis overflow-hidden"
                >
                  {series.name}
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    ))
  }
</div>
